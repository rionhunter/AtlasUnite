# Generated by Django 5.2.4 on 2025-08-04 08:41

import django.core.validators
import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('community', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('division', models.CharField(choices=[('locals_unite', 'Locals Unite'), ('atlas_ink', 'Atlas Ink'), ('community_garden', 'Community Gardens'), ('habitat_restoration', 'Habitat Restoration'), ('charity_support', 'Charity Support'), ('education', 'Education & Workshops')], max_length=50)),
                ('location', models.CharField(help_text='Suburb or specific location in Brisbane', max_length=200)),
                ('coordinator', models.CharField(max_length=100)),
                ('status', models.CharField(choices=[('planning', 'Planning'), ('recruiting', 'Recruiting Volunteers'), ('active', 'Active'), ('completed', 'Completed'), ('paused', 'Paused')], default='planning', max_length=20)),
                ('volunteers_needed', models.PositiveIntegerField(default=1)),
                ('volunteers_registered', models.PositiveIntegerField(default=0)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('xp_reward', models.PositiveIntegerField(default=10, help_text='XP points awarded for participation')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='volunteer',
            name='division_level',
            field=models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)]),
        ),
        migrations.AddField(
            model_name='volunteer',
            name='reliability_score',
            field=models.FloatField(default=100.0, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(100.0)]),
        ),
        migrations.AddField(
            model_name='volunteer',
            name='time_completed_hours',
            field=models.PositiveIntegerField(default=0, help_text='Hours actually completed'),
        ),
        migrations.AddField(
            model_name='volunteer',
            name='time_pledged_hours',
            field=models.PositiveIntegerField(default=0, help_text='Hours pledged for volunteer work'),
        ),
        migrations.AddField(
            model_name='volunteer',
            name='verified_volunteer',
            field=models.BooleanField(default=False, help_text='Time tracking verified by project leaders'),
        ),
        migrations.AddField(
            model_name='volunteer',
            name='xp_points',
            field=models.PositiveIntegerField(default=0),
        ),
        migrations.CreateModel(
            name='TimeCommitment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('hours_pledged', models.PositiveIntegerField()),
                ('hours_completed', models.PositiveIntegerField(default=0)),
                ('pledge_date', models.DateTimeField(auto_now_add=True)),
                ('completion_verified_by', models.CharField(blank=True, help_text='Project leader who verified hours', max_length=100, null=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='time_commitments', to='community.project')),
                ('volunteer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='time_commitments', to='community.volunteer')),
            ],
            options={
                'ordering': ['-pledge_date'],
            },
        ),
        migrations.CreateModel(
            name='XPActivity',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('activity_type', models.CharField(choices=[('project_signup', 'Project Sign-up'), ('project_completion', 'Project Completion'), ('forum_post', 'Forum Post'), ('forum_comment', 'Forum Comment'), ('volunteer_hours', 'Volunteer Hours Logged'), ('community_vote', 'Community Vote'), ('mentor_activity', 'Mentoring Activity')], max_length=30)),
                ('xp_earned', models.PositiveIntegerField()),
                ('description', models.CharField(max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='community.project')),
                ('volunteer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='xp_activities', to='community.volunteer')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DivisionChampion',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('division', models.CharField(choices=[('locals_unite', 'Locals Unite'), ('atlas_ink', 'Atlas Ink'), ('community_garden', 'Community Gardens'), ('habitat_restoration', 'Habitat Restoration'), ('charity_support', 'Charity Support'), ('education', 'Education & Workshops')], max_length=50)),
                ('appointed_at', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
                ('volunteer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='champion_roles', to='community.volunteer')),
            ],
            options={
                'ordering': ['-appointed_at'],
                'unique_together': {('volunteer', 'division')},
            },
        ),
    ]
